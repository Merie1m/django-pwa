# Generated by Django 5.2.1 on 2025-06-02 23:26

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='OfflineAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nom de la ressource, minimum 3 caractères.', max_length=100, validators=[django.core.validators.MinLengthValidator(3)])),
                ('url', models.URLField(help_text='URL unique vers la ressource (ex: /static/js/main.js).', unique=True, validators=[django.core.validators.URLValidator()])),
                ('version', models.CharField(help_text="Version de la ressource (ex: 'v1.0.3').", max_length=50, validators=[django.core.validators.MinLengthValidator(1)])),
                ('file_type', models.CharField(choices=[('image', 'Image'), ('script', 'Script'), ('style', 'Feuille de style'), ('html', 'HTML'), ('other', 'Autre')], default='other', help_text='Type de ressource pour aider à la gestion du cache.', max_length=20)),
                ('size_kb', models.PositiveIntegerField(blank=True, help_text='Taille approximative du fichier en kilo-octets.', null=True)),
                ('is_critical', models.BooleanField(default=False, help_text="Cette ressource est-elle critique pour l'affichage hors ligne ?")),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Met automatiquement la date de mise à jour à chaque modification.')),
            ],
            options={
                'verbose_name': 'Ressource hors ligne',
                'verbose_name_plural': 'Ressources hors ligne',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, validators=[django.core.validators.MinLengthValidator(3)])),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('users', models.ManyToManyField(related_name='projects', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='pwa.project')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='pwa.project')),
            ],
        ),
        migrations.CreateModel(
            name='PushSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('endpoint', models.URLField(help_text="URL d'envoi fournie par le navigateur lors de l'abonnement Web Push.", unique=True, validators=[django.core.validators.URLValidator()])),
                ('p256dh', models.CharField(help_text='Clé publique du client (pour chiffrer les messages).', max_length=255, validators=[django.core.validators.MinLengthValidator(10)])),
                ('auth', models.CharField(help_text="Jeton d'authentification sécurisé.", max_length=255, validators=[django.core.validators.MinLengthValidator(10)])),
                ('browser', models.CharField(choices=[('chrome', 'Chrome'), ('firefox', 'Firefox'), ('edge', 'Edge'), ('safari', 'Safari'), ('other', 'Autre')], default='other', help_text="Le navigateur utilisé par l'utilisateur.", max_length=50)),
                ('is_active', models.BooleanField(default=True, help_text="Si l'utilisateur a désactivé les notifications, passe à False.")),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text="Date d'enregistrement initial de l'abonnement.")),
                ('last_used', models.DateTimeField(blank=True, help_text='Dernière fois où une notification a été envoyée.', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Abonnement Push',
                'verbose_name_plural': 'Abonnements Push',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('todo', 'À faire'), ('in_progress', 'En cours'), ('done', 'Terminée')], default='todo', max_length=20)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('priority', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='pwa.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
